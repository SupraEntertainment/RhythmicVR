name: Actions ðŸ˜Ž

on: [push, pull_request]

env:
  game_name: "RhythmicVR"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        
          - name: "Build project (WebGL) âœ¨"
            os: ubuntu-latest
            targetPlatform: WebGL
            artifactName: "$game_name WebGL"
          
          - name: "Build project (Linux x64) âœ¨"
            os: ubuntu-latest
            targetPlatform: StandaloneLinux64
            artifactName: "$game_name Linux x64"
          
          - name: "Build project (Windows x64) âœ¨"
            os: windows-2022
            targetPlatform: StandaloneWindows64
            artifactName: "$game_name Windows x64"
          
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      #- name: Run tests
      #  uses: game-ci/unity-test-runner@v2
      #  env:
      #    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #  with:
      #    githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifactName }}
          path: build